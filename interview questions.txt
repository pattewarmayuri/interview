PATTEWAR MAYURI
CAPG49LSRB425
BATCH 49


1.What is difference in Overloading and Over riding?
Ans. two or more methods in the same class have same names but different parameters, then it is overloading.
     when the method name and parameters are same in the super class and child class, then it is overriding.


2.If both the functions are statis can we over ride?
Ans. No, because method overriding is based on dynamic biding at runtime and static methods are at compile time.


3.Diffference between Final , Finally and Finalize
Ans. Final : and access modifier used to restrict on a class, method or a variable. final keyword makes sure that the class, method or variable cannot be modified.
     finally : an block in java exception handling to execute the important irrelevant of exception.
     finalize: finalize is the method in Java which is used to perform clean up processing just before an object is garbage collected.


4.What are maker Interfaces?
Ans. A marker interface is an interface that has no methods or constants inside it. It provides run-time type information about objects, so the compiler and JVM have additional information about the object.


5.What is Singleton class?
Ans. A Singleton class in Java allows only one instance to be created and provides global access to all other classes through this single object or instance. Similar to the static fields, The instance fields(if any) of a class will occur only for a single time.


6.What is the underlying Data structure for Arraylist and Linkedlist?
Ans. ArrayList uses the Array data structure, and LinkedList uses the DoublyLinkedList data structure.


7.What is hash collitition?
Ans. A collision occurs when more than one value to be hashed by a particular hash function hash to the same slot in the table or data structure (hash table) being generated by the hash function.


8.What are lambda Expressions?
Ans. A lambda expression is a short block of code which takes in parameters and returns a value. Lambda expressions are similar to methods, but they do not need a name and they can be implemented right in the body of a method.


9.Whats is functional interface?
Ans. A functional interface is an interface that contains only one abstract method. They can have only one functionality to exhibit. From Java 8 onwards, lambda expressions can be used to represent the instance of a functional interface.


10.What are optional classes in Java 8?
Ans. optional class is a class which is used to avoid null ckecks and null pointer exception.


11.Whats is factory design pattern and Adapter and difference between them ?
Ans. A Factory Design Pattern is an interface or abstract class for creating an object but let the subclasses decide which class to instantiate.
     Adapter dESIGN pattern works as a bridge between two incompatible interfaces. This type of design pattern comes under structural pattern as this pattern combines the capability of two independent interfaces.

     Factory Pattern does the operation on the created objects (the factory class done the job after creation), 
     whereas Adapter pattern is used after the application components are designed so that we can use them without modifying the source code.


12.What are Solid principles ?
Ans. These principles establish practices that lend to developing software with considerations for maintaining and extending as the project grows. 
     Adopting these practices can also contribute to avoiding code smells, refactoring code, and Agile or Adaptive software development.
     Itâ€™s a mnemonic acronym for the following five design principles:

     Single Responsibility Principle
     Open/Closed Principle
     Liskov Substitution Principle
     Interface Segregation Principle
     Dependency Inversion


13. What does @component and @scan do in Sprinboot annaotation
Ans. @Component is an annotation that allows Spring to automatically detect our custom beans. 
     In other words, without having to write any explicit code, Spring will Scan our application for classes annotated with @Component. Instantiate them and inject any specified dependencies into them.

     With Spring, we use the @ComponentScan annotation along with the @Configuration annotation to specify the packages that we want to be scanned. 
     @ComponentScan without arguments tells Spring to scan the current package and all of its sub-packages


14.Whats is the Diference bew JPA , Hibernate and ORM?
Ans. ORM : Object relational mapping is process of converting the data from object oriented language to relational DB and vice versa.
     Hibernate : Hibernate is a tool which is used to save the state of Java object into the database. It is just a specification. Various ORM tools implement it for data persistence.
     ORM : Object-Relational Mapping (ORM) is the process of converting Java objects to database tables. In other words, this allows us to interact with a relational database without any SQL.


15.What is indexing in Database?
Ans. Indexing is a way to optimize the performance of a database by minimizing the number of disk accesses required when a query is processed. 
     It is a data structure technique which is used to quickly locate and access the data in a database.

16.What are 4 types of Drivers in Jdbc?
Ans. Type 1: JDBC-ODBC bridge
     Type 2: partial Java driver
     Type 3: pure Java driver for database middleware
     Type 4: pure Java driver for direct-to-database
     Type 5: highly-functional drivers with superior performance


17.What is difference between @component and @bean and @service ?
Ans. @bean - It is used to explicitly declare a single bean, rather than letting Spring do it automatically. 
     @component - If any class is annotated with @Component it will be automatically detect by using classpath scan.
     @Service is a stereotype for the service layer. It annotates classes at the service layer.


18. What is difference bew SOAP and restful services techinically?
Ans. SOAP : OAP (Simple Object Access Protocol) is an XML-based protocol for accessing web services over HTTP. 
            It is developed as an intermediate language so that applications built in various programming languages can communicate with each other effectively. Web services use SOAP for exchange of XML data between applications. 
	    SOAP supports both stateful and stateless operations. Stateful means that the server keeps the information that it receives from the client across multiple requests. These requests are chained together so that the server is aware about the previous requests. Examples are bank transactions, flight bookings, etc. 
	    Stateless messaging has enough information about the state of the client so that the server does not have to bother.
     REST : REST (Representational State Transfer) is an architectural approach for communication purposes often used in various web services development. 
	    It is a stateless client-server model. Web services that are defined on the concept of REST are RESTful web services. 
            When a client makes a request via RESTful API, it transfers the representation of the state of the resources to the server. This information can be transferred in various formats via HTTP like, JSON, HTML, XLT, and Plain Text, but JSON is the most common language used due to its easy readability by machines and humans.


19. Difference in POST and PUT ?
Ans. PUT method is call when you have to modify a single resource, which is already a part of resource collection.
     POST method is call when you have to add a child resource under resources collection.


20. IS react uni directional or Bi directional?
Ans. React, a Javascript library, uses unidirectional data flow.